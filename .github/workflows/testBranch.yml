# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Test before Pull Request

on:
  pull_request:
    branches: [ "master" ]


jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    # set up java
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

      # set up application file
    - name: Create application file
      run: |
        mkdir -p ./src/main/resources
        cd ./src/main/resources
        echo "${{ secrets.APPLICATION }}" >> ./application.properties
        echo "${{ secrets.APPLICATION_LOGGING }}" >> ./application.properties
        echo "${{ secrets.APPLICATION_SQL }}" >> ./application.properties
        echo "${{ secrets.APPLICATION_REDIS }}" >> ./application.properties
        echo "${{ secrets.APPLICATION_EMAIL }}" >> ./application.properties

      # set up mysql
    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3306
        container port: 3306
        mysql database: 'test'
        mysql user: 'root'
        mysql password: 'test'

      # apply caching
    - name: Gradle Caching
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

      # gradle grant execution permission and build project
    - name: Setup Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew clean --info build 

    - name: Test Coverage Report
      id: jacoco
      uses: madrapps/jacoco-report@v1.7.1
      with:
          title: Test Coverage Report
          paths: ${{ github.workspace }}/build/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 50
          min-coverage-changed-files: 90
#      # build Docker image
#    - name: docker image build
#      run: docker build -f Dockerfile-test -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:test .