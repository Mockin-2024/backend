# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Test before Pull Request

on:
  pull_request:
    branches: [ "master" ]


jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    # set up java
    steps:
    - uses: actions/checkout@v4
#    - name: Set up JDK 17
#      uses: actions/setup-java@v4
#      with:
#        java-version: '17'
#        distribution: 'temurin'

      # set up application file
    - name: Create application file
      run: |
        mkdir -p ./src/main/resources
        cd ./src/main/resources
        echo "${{ secrets.APPLICATION }}" >> ./application.properties
        echo "${{ secrets.APPLICATION_LOGGING }}" >> ./application.properties
        echo "${{ secrets.APPLICATION_SQL }}" >> ./application.properties
        echo "${{ secrets.APPLICATION_REDIS }}" >> ./application.properties

      # login dockerhub
    - name: login to dockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # build Docker image
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:test .

      # push docker image
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:test